{{- define "nats-configmap" }}
# PID file shared with configuration reloader.
pid_file: "/var/run/stan/stan.pid"

###############
#             #
# Monitoring  #
#             #
###############
http: 8222
server_name: $POD_NAME

{{- if .Values.cluster.enabled }}
{{- if or .Values.store.cluster.enabled .Values.store.ft.group }}

###################################
#                                 #
# NATS Full Mesh Clustering Setup #
#                                 #
###################################
cluster {
  port: 6222

  {{- with .Values.cluster.name }}
  name: {{ . }}
  {{- end }}

  {{- with .Values.cluster.tls }}
  {{ $secretName := .secret.name }}
  tls {
     {{- with .cert }}
     cert_file: /etc/nats-certs/cluster/{{ $secretName }}/{{ . }}
     {{- end }}

     {{- with .key }}
     key_file: /etc/nats-certs/cluster/{{ $secretName }}/{{ . }}
     {{- end }}

     {{- with .ca }}
     ca_file: /etc/nats-certs/cluster/{{ $secretName }}/{{ . }}
     {{- end }}

     {{- with .insecure }}
     insecure: {{ . }}
     {{- end }}

     {{- with .verify }}
     verify: {{ . }}
     {{- end }}

     {{- with .verifyAndMap }}
     verify_and_map: {{ . }}
     {{- end }}

     {{- with .curvePreferences }}
     curve_preferences: {{ . }}
     {{- end }}

     {{- with .timeout }}
     timeout: {{ . }}
     {{- end }}
  }
  {{- end }}

  routes = [
    {{ template "nats.clusterRoutes" . }}
  ]
  cluster_advertise: $CLUSTER_ADVERTISE

  {{- with .Values.cluster.noAdvertise }}
  no_advertise: {{ . }}
  {{- end }}

  connect_retries: {{ .Values.nats.connectRetries }}
}
{{- end }}
{{- end }}

{{- if and .Values.nats.advertise .Values.nats.externalAccess }}
include "advertise/client_advertise.conf"
{{- end }}


{{- with .Values.nats.logging.debug }}
debug: {{ . }}
{{- end }}

{{- with .Values.nats.logging.trace }}
trace:  {{ . }}
{{- end }}

{{- with .Values.nats.logging.logtime }}
logtime: {{ . }}
{{- end }}

{{- with .Values.nats.logging.connectErrorReports }}
connect_error_reports: {{ . }}
{{- end }}

{{- with .Values.nats.logging.reconnectErrorReports }}
reconnect_error_reports: {{ . }}
{{- end }}

{{- with .Values.nats.limits.maxConnections }}
max_connections: {{ . }}
{{- end }}
{{- with .Values.nats.limits.maxSubscriptions }}
max_subscriptions: {{ . }}
{{- end }}
{{- with .Values.nats.limits.maxPending }}
max_pending: {{ . }}
{{- end }}
{{- with .Values.nats.limits.maxControlLine }}
max_control_line: {{ . }}
{{- end }}
{{- with .Values.nats.limits.maxPayload }}
max_payload: {{ . }}
{{- end }}
{{- with .Values.nats.pingInterval }}
ping_interval: {{ . }}
{{- end }}
{{- with .Values.nats.maxPings }}
ping_max: {{ . }}
{{- end }}
{{- with .Values.nats.writeDeadline }}
write_deadline: {{ . | quote }}
{{- end }}
{{- with .Values.nats.writeDeadline }}
lame_duck_duration:  {{ . | quote }}
{{- end }}

{{- if .Values.auth.enabled }}
##################
#                #
# Authorization  #
#                #
##################
{{- if .Values.auth.resolver }}

{{- if eq .Values.auth.resolver.type "memory" }}
resolver: MEMORY
include "accounts/{{ .Values.auth.resolver.configMap.key }}"
{{- end }}

{{- if eq .Values.auth.resolver.type "URL" }}
{{- with .Values.auth.resolver.url }}
resolver: URL({{ . }})
{{- end }}
operator: /etc/nats-config/operator/{{ .Values.auth.operatorjwt.configMap.key }}
{{- end }}

{{- end }}

{{- with .Values.auth.systemAccount }}
system_account: {{ . }}
{{- end }}

{{- with .Values.auth.basic }}

{{- with .noAuthUser }}
no_auth_user: {{ . }}
{{- end }}

{{- with .users }}
authorization {
  users: [
  {{- range . }}
    {{- toRawJson . | nindent 4 }},
  {{- end }}
  ]
}
{{- end }}

{{- with .accounts }}
accounts: {{- toRawJson . }}
{{- end }}
{{- end }}

{{- end }}
{{- end }}