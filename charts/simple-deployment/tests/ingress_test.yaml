suite: Ingress host tests
templates: 
- "ingress.yaml"
tests:
# NOTE: The reason we do not have asserts in the first test, like the rest is because we need to put the host test into the template itself.
#       This is done because the "failedTemplate" assertion matches, only if the ingress template fails. 
#       When the failedTemplate" assertion matches, it is expecting that the error message in the ingress template is the same. 
#       This way we are sure that the template is failing, explicitly because the user was trying to input an invalid hostname.

  - it: "Should not allow private as a subdomain of okcloud.dk"
    set: 
      service.enable: true 
      deployment.container.containerPort: 8080
      ingress.enable: true
      ingress:
        host: "example.private.test.okcloud.dk"
    asserts:
      - failedTemplate: 
         ErrorMessage: "Private subdomain for okcloud.dk is not allowed."

  - it: "Should allow private as a subdomain of all environments in okdc.dk and also set the correct cluster-issuer and ingressClass"
    set: 
      service.enable: true 
      deployment.container.containerPort: 8080
      ingress.enable: true
      ingress:
        host: "example.private.okdc.dk"
    asserts:
      - equal:
          path: "spec.ingressClassName"
          value: "nginx"  # Expected value based on ingressClassName
      - equal: 
          path: "metadata.annotations['cert-manager.io/cluster-issuer']"
          value: "clouddns-dns01-issuer"
      - matchRegex:
          path: "spec.rules[0].host"
          pattern: "^[a-zA-Z0-9-]+\\.private\\.(?:test.|prodtest.|)okdc\\.dk$"
      - notFailedTemplate: {}
   
  - it: "Should allow public as a subdomain of all environments in okdc.dk and also set the correct cluster-issuer and ingressClass"
    set: 
      service.enable: true 
      deployment.container.containerPort: 8080
      ingress.enable: true
      ingress:
        host: "example.test.okdc.dk"
    asserts:
      - equal:
          path: "spec.ingressClassName"
          value: "nginx-public"  # Expected value based on ingressClassName
      - equal:
          path: "metadata.annotations['cert-manager.io/cluster-issuer']"
          value: "clouddns-dns01-issuer"
      - matchRegex:
          path: "spec.rules[0].host"
          pattern: "^[a-zA-Z0-9-]+\\.(?:test.|prodtest.|)okdc\\.dk$"
      - notFailedTemplate: {}

  - it: "Should allow all public hosts in all environments in okcloud.dk and also set the correct cluster-issuer and ingressClass"
    set: 
      service.enable: true 
      deployment.container.containerPort: 8080
      ingress.enable: true
      ingress:
        host: "example.test.okcloud.dk"
    asserts:
      - equal:
          path: "spec.ingressClassName"
          value: "nginx"  # Expected value based on ingressClassName
      - equal:
          path: "metadata.annotations['cert-manager.io/cluster-issuer']"
          value: "nginx-http01"
      - matchRegex:
          path: "spec.rules[0].host"
          pattern: "^[a-zA-Z0-9.-]+\\.(?:test.|prodtest.|)okcloud\\.dk$"
      - notFailedTemplate: {}
