global:
  # Add labels from a parent chart to all manifests.
  labels: {}

  # The Google Project ID.
  # [Required for Cloud SQL Proxy]
  projectID: null

# Will rename all resources.
fullnameOverride: ""

##################################################
#                  Deployment                    #
##################################################

deployment:
  # Labels on the Deployment definition.
  labels: {}

  # Annotations on the Deployment definition.
  annotations: {}


  dataDog:
    # Enable DataDog logging. Please make sure that your logs comply with the okamba standard ruleset.
    # If in doubt, ask a collauge or the infrastructure team.
    enableLogs: false

  # Pod Replicas
  replicas: 2

  # Pod Annotations
  podAnnotations: {}

  # Pod Labels
  podLabels: {}

  # Used for Image Registry credentials other than your default registry.
  imagePullSecrets: []
    #- secret-name-here

  # Main container configuration
  container:
    image: example-image
    tag: latest

    # Enable custom command
    #command: ["my-command"]
    #args: ["with", "--params=yes"]

    # containerPort needs to be set if the container has to receive traffic.
    containerPort: null
    resources:
      requests:
        memory: 500Mi
        cpu: 100m
      limits:
        memory: 2000Mi
        cpu: 1000m

    # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
    livenessProbe:
      enable: true
      httpGet:
        path: /healthz

    readinessProbe:
      enable: true
      httpGet:
        path: /readyz

    startupProbe:
      enable: false
      httpGet:
        path: /healthz

    environment: {}
      # SOME_ENV: some-value

    envFromConfigmap: []
      # - configmap-name

    fieldRefEnvironment: {}
      # SOME_ENV: some-field-reference

    # Below list of kubernetes secret names will be mounted into the container
    # under the path /secrets/<secret-name>/<secret-key>
    secrets: []
    # - very-secret

    # Below list of configmaps will be mounted into he container.
    configMaps: []
    # - name: some-configmap
    #   mountPath: /some/path

    # Below additional volumes vil be mounted in the container at mountPath.
    additionalVolumeMounts: []
    # - name: cache-volume
    #   mountPath: /some/path

    # Below add external secrets
    externalSecrets: []
    #  - name: "secrets"
    #    data:
    #    - key: "secret 1"
    #      remoteSecret: "key.json"
    #    - key: "secret 2"
    #      remoteSecret: "key2.json"

  # Add additional volumes.
  additionalVolumes: []
  # - name: cache-volume
  #   emptyDir: {}

  # Assign a service account for your application.
  # This service account represents your application and is used for authentication
  # with Workload Identity. The service account must be Workload Identity enabled.
  serviceAccountName: default

  # Enable the Google Cloud SQL Proxy sidecar
  # Find the latest version here, https://gcr.io/cloud-sql-connectors/cloud-sql-proxy
  cloudSQLProxy:
    enable: false
    instanceName: sqlinstance-name

    # [Deprecated]
    # If specified, Cloud SQL Proxy will use the provided credentials file for authn
    # insted of application default login aka Workload Identity.
    # secretKeyName: google-service-account-key

    # Immutable, if not specified, region will default to europe-west3
    # region: europe-west3

##################################################
#                    Service                     #
##################################################

# Remember to set the container port when enabling the service.
service:
  enable: false
  portName: ""
  # Labels on the Service definition.
  labels: {}

  # Annotations on the Service definition.
  annotations: {}


##################################################
#                    Ingress                     #
##################################################

ingress:
  # Enable the ingress definition.
  enable: false

  # Labels on the Ingress definition.
  labels: {}

  # Annotations on the Ingress definition.
  annotations: {}

  # URL of the application
  host: example.org

  # Creating DNS records is only supported in our test and prod-test environment.
  # If needed, only enable this setting on the specific enrionment value file.
  createDNSRecord: false

  # Redirect HTTP to HTTPS.
  # SSL Redirect is disabled for security reasons. Enable only for frontend applications.
  sslRedirect: false

  # Redirect www.example.org to example.org.
  # Use this for custmer facing sites to support old Boomer habits.
  wwwRedirect: false

  # By default, this chart will create a pathType: Prefix on "/" for the service above.
  # If you want additional paths eg. a path to a BFF, add them below.
  additionalPaths: []
  # - path: /api/
  #   pathType: Prefix
  #   backend:
  #     service:
  #       name: backend-for-frontend
  #       port:
  #         number: 3000

  # Define what exposure you want for your application.
  # Default is set based on the cluster.
  exposure: null

  # Define what cluster you want to deploy your service in.
  cluster: "null"


##################################################
#           Pod Disruption Budget               #
##################################################
# NOTE: a Pod can only be affected by a single Pod Disruption Budget. If you attempt to create multipe Pod Disruption Budgets for the same Pod,
#       it will throw an error when the eviction API is invoked on the Pod and prevent it from being envicted.
podDisruptionBudget:
  # Labels on the Pod Disruption Budget definition
  labels: {}

  # Annotations on the Pod Disruption Budget definition
  annotations: {}

  # Enable a Pod Disruption Budget definition.
  # This allows you to protect your services from voluntary evictions.
  # Example use case could be ensuring that at most 1 pod is down during node upgrades. 
  enable: false

  # How many pods are allowed to be unavailable during e.g. scaling of nodes or updates. 
  # Only integer values are supported. 0 is not an allowed value, since it will potentially block a node indefinitely.
  maxUnavailablePods: 1
